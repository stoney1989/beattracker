package ch.fhnw.tvver;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.EnumSet;
import java.util.List;

import javax.sound.sampled.UnsupportedAudioFileException;

import ddf.minim.analysis.FFT;

public class BetterFFTBeatDetection extends AbstractBeatTracker {
	
	
	final static int BUFFER_SIZE = 1024;	
	
	private float[] buffer; 
	
	private float[] spectrum;
	private float[] lastspectrum;
	private FFT fft;
	private List<Float> spectralFlux;
	
	public BetterFFTBeatDetection(File track)throws UnsupportedAudioFileException, IOException {
		super(track, EnumSet.of(Flags.REPORT));		
		buffer = new float[ BUFFER_SIZE ];		
		fft = new FFT( BUFFER_SIZE, 44100 );		
		spectrum = new float[ BUFFER_SIZE / 2 + 1 ];
		lastspectrum = new float[ BUFFER_SIZE / 2 + 1 ];
		spectralFlux = new ArrayList<>();
	}
	
	
	
	
	
	@Override
	public void run() {
		
	
		
		try {
			
			int x = 0;

			
			while( getSamples(buffer) ){			
				
//				FloatFFT_1D fft_do = new FloatFFT_1D(BUFFER_SIZE);
//				float[] fft = new float[BUFFER_SIZE * 2];
//				System.arraycopy(buffer, 0, fft, 0, BUFFER_SIZE);
//				fft_do.complexForward( fft );				
				//fft_do.realForward(buffer);
				
				System.out.println("-------------------------------------");
				
				for (int i = 0; i < BUFFER_SIZE; i++) {
					//System.out.println(buffer[i]);
					int index = i*2;
					float re = fft[ index    ];
					float im = fft[ index + 1];
//					
					spectrum[i] = (float) Math.sqrt( Math.pow( re, 2 ) + Math.pow( im, 2 ) );
					System.out.println(spectrum[i]);
				}
		
				if(x>43)break;
				x++;
				
				
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	
	
	
	

}

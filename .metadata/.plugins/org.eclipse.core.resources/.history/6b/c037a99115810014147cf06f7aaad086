package ch.fhnw.tvver;

import java.io.File;
import java.io.IOException;
import java.util.EnumSet;

import javax.sound.sampled.UnsupportedAudioFileException;

import org.jtransforms.fft.FloatFFT_1D;

public class BetterFFTBeatDetection extends AbstractBeatTracker {
	
	
	final static int BUFFER_SIZE = 1024;	
	
	private float[] buffer; 
	
	
	public BetterFFTBeatDetection(File track)throws UnsupportedAudioFileException, IOException {
		super(track, EnumSet.of(Flags.REPORT));		
		buffer = new float[ BUFFER_SIZE ];	
	}
	
	
	
	
	
	@Override
	public void run() {
		
	
		
		try {
			while( getSamples(buffer) ){			
				
				FloatFFT_1D fft_do = new FloatFFT_1D(buffer.length);
				float[] fft = new float[buffer.length * 2];
				System.arraycopy(buffer, 0, fft, 0, buffer.length);
				fft_do.complexForward( fft );				
		
			
				
				
				
			}
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}

	}
	
	private float calculateHistoryAverage( int subband ){
		float averageEI = 0f;
		for (int i = 0; i < HISTORY_SIZE; i++) {
			averageEI += Ei[ subband ][ i ]; 
		}
		return averageEI/HISTORY_SIZE;
	}
	
	private void addAmplitudeToHistory( int subband, float amplitude ){
		int i = EiIndexes[ subband ];
		Ei[ subband ][ i ] = amplitude;
		
		//update index
		EiIndexes[ subband ]++;
		if( EiIndexes[ subband ] >= HISTORY_SIZE ) EiIndexes[ subband ] = 0;
	}
	
	

}
